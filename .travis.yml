sudo: required
services:
  - docker

# build a test image of the services that need testing
before_install:
  - docker build -t client-test -f ./client/Dockerfile.dev ./client
  # TODO: build additional images that you want to test here

# test the images
scripts:
  # remember, the CI env var is required for react to exit after testing
  - docker run -e CI=true client-test npm run test -- --coverage
  # TODO: test any additional images here

# build the images
# NOTE: the final argument is the context of which to look for a dockerfile
after_success:
  - docker build -t codihuston/multi-docker-client ./client
  - docker build -t codihuston/multi-docker-nginx ./nginx
  - docker build -t codihuston/multi-docker-server ./server
  - docker build -t codihuston/multi-docker-worker ./worker
  # log into docker cli
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
  # push to docker hub
  - docker push codihuston/multi-docker-client
  - docker push codihuston/multi-docker-nginx
  - docker push codihuston/multi-docker-server
  - docker push codihuston/multi-docker-worker

# baton pass to AWS EBS
deploy:
  # a travis setting
  provider: elasticbeanstalk
  # sub domain on aws console
  region: us-east-2
  # app name in ebs
  app: multi-docker2
  # app environment in ebs
  env: MultiDocker2-env
  # s3 bucket for your region
  bucket_name: elasticbeanstalk-us-east-2-072617488360
  bucket_path: docker-multi
  # deploy only on master
  on:
    branch: master
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key: $AWS_SECRET_KEY